language: python
python:
  - "2.7"
  - "3.5"
cache:
  directories:
  - "$HOME/.cache"

install:
  - pip install -r requirements.txt
  - pip install wheel

script:
  - echo "Skip tests !" #pytest

after_success:
  - python setup.py bdist_wheel --universal
  - python setup.py bdist_egg
  - python setup.py sdist --formats=gztar,zip
  - git fetch --tags
  - export DEPLOY=false
  - >
    if [[ ! $(git tag -l v$(python -W ignore setup.py --version)) ]]; then
      git config --local user.name "$(git log -1 --pretty=format:'%an')";
      git config --local user.email "$(git log -1 --pretty=format:'%ae')";
      git tag "v$(python -W ignore setup.py --version)";
      export DEPLOY=true;
    fi;

deploy:
  - provider: releases
    api_key:
      secure: iwv5loqGr4smy+C1merhBDzflUKooaI/RhFFHjNha55spRPMLNUlR41dg6DWcJBOniQSQo0WUZVJH4VLxsOvJLc5w8+d3toYycHhWWM+v7frI78vYequBQrJ6e7X0MHmacxE4mqg6r0QrDrmnnDH3469zYupx4YNGXQztdc6raATgsni8tVXvB3jYYcRz6rhGwP+PzWnUPhvkakAsXsDFCA8DNkz71ewmZ0ho8CwQ9CPUBgqNJrIt5cJ+57kjIxj940T++V2lw+7lyo9UaCpqmvvogeie8PN05NWDqnq+HfORFWTODCRZVgFmxYaKLUkgNLmXP5Vp+/YLM8y4LB20fhW08VdCB7pD+CUGD6LhSOGAWp3c36hBx/nX8TjfgiS0L7TiBwF4cp+WHMIcToZovDubesrkxN2AwvaETUt8C/pQvALVSYuIf9t65y1Y0g6j0XWgZ4gYr/FTTvpNCkCgDVbllRagx8zHSk8UTa0ejGIOJh5Cv549MXRCpOvPSc36/oaqrKkwmvJG9fJu8HMnjyA/AbP5QwZYJyp6CcxvKnmsk96DG0QuunFb7QorUSbR3AFeGsADGgehY6Skoez6p3fnfNlJ3RsYOlUqL9h5v43ihwzPsndh3Qq0/R9tuyts8eAFkHpqsS8VBLu23iXYnmFaYzJ1FHEtqRg2KG/AKs=
    file_glob: true
    file: "dist/*.{zip,tar,gz}"
    skip_cleanup: true
    on:
      python: 3.5
      condition: $DEPLOY = true
  - provider: packagecloud
    username: cytomine-uliege
    repository: Cytomine-python-client
    token: "${PACKAGECLOUD_TOKEN}"
    dist: "python"
    package_glob: "dist/*.{whl,egg,egg-info,tar,gz}"
    skip_cleanup: true
    on:
      python: 3.5
      condition: $DEPLOY = true
notifications:
  email: false
  slack:
    secure: TrdyGx56LOXEzrMxZgMhnYwpLQjIX3fL40YYujq40W66Rcis6nm2SP4i0By3fOSwwKcRwP8HXvs219sZddL3KJSZ0ormMvLHVjo9NNEbUAHqWVUBnaNJjF6ANmRFpuIKkVRTu2LQHaJhjMFyrKg8VVRAxNR1keaOsVeb4/U6gLF9LqfMciz56TtoDzfbMfB0V7l+RtUfRpeKGjDqp+lAEIzueSRItK49hP4gACGxJEMACIG+z1PZNLtVTnV6DokqnVmhUBIo9+ikLmU8g48Ark6hmj0JC5zZHK+LwZUhlMeJmPsJMydJ0ZPiOzcdPhQoLZC5looGFYPru2Igu3GTIM/hoTCDIYUCYRStr0vRF4niEEWMXKp9NJUQHkK0RwPCsuc0iwl1Jaeh9+qSEUeEW3tYyRgNwBPI4YK/XFt1/oDHufi8xU50xVTysSOxVJWbZ29OVdJ4LtWrF5rdKiFfl54sAqEnVREp8QcvRFXLMwL89cW5omi4xqmlojLm1pS/6DthlrED7dMz8qQi43shOPQbVqA+TRRUXl7jPo4DNTbI/8KfJGXg76scytZB4qUx4t6j2C9YxllHEZf7nlNyvHQzTLrcNOB6kxYFOibdrWIm1TycpbIBkb3l/1ZP0MgVFLpEu89eYcCpk29g6QkdyMU6Pb69avq4c9HUk0WhGME=
